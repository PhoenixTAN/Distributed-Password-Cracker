{"version":3,"sources":["components/Collaboration/Collaboration.js","components/Alert/Alert.js","components/Cracker/Cracker.js","App.js","index.js"],"names":["Collaboration","className","Alert","props","message","Cracker","useState","showAlert","setAlert","alertMessage","setAlertMessage","passwordTips","setPasswordTips","md5Tips","setMd5Tips","numOfWorkersTips","setNumOfWorkersTips","status","setStatus","correctPassword","setCorrectPassword","disableCrack","setDisableCracker","passwordRef","useRef","md5Ref","numOfWorkersRef","ref","onChange","event","password","target","value","length","i","current","CryptoJS","MD5","toString","passwordOnChange","spellCheck","md5","md5OnChange","numOfWorkers","parseInt","isNaN","numOfWorkersOnChange","onClick","setTimeout","requestTimeout","body","MD5Password","workerNum","console","log","Axios","post","then","res","data","clearTimeout","catch","error","onProceedCrack","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1ef494.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Collaboration.css';\r\n\r\nconst Collaboration = () => {\r\n\r\n  return (\r\n    <section className=\"collaboration\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Member</th>\r\n            <th>BUID</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Ziqi Tan</td>\r\n            <td>U 88387934</td>\r\n            <td>ziqi1756@bu.edu</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Xueyan Xia</td>\r\n            <td>U 82450191</td>\r\n            <td>xueyanx@bu.edu</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Kaijia You</td>\r\n            <td>U 44518396</td>\r\n            <td>caydenyo@bu.edu</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Jingzhou Xue</td>\r\n            <td>U 10828768</td>\r\n            <td>jxue@bu.edu</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Collaboration;\r\n","import React from \"react\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = (props) => {\r\n  return <div className=\"alert\">{props.message}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport \"./Cracker.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport CryptoJS from \"crypto-js\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport Axios from \"axios\";\r\n\r\nconst Cracker = () => {\r\n  const MAX_NUM_OF_WORKERS = 8;\r\n  const DEFAULT_NUM_OF_WORKERS = 8;\r\n\r\n  const PASSWORD_LENGTH = 5;\r\n  const MD5_LENGTH = 32;\r\n  const MANAGEMENT_SERVER_URL = \"http://192.86.139.65:8080/getPassword\";\r\n  const REQUEST_DELAY = 1500; // ms\r\n  const REQUEST_TIMEOUT = 10000; // ms\r\n\r\n  const [showAlert, setAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [passwordTips, setPasswordTips] = useState(\"\");\r\n  const [md5Tips, setMd5Tips] = useState(\"\");\r\n  const [numOfWorkersTips, setNumOfWorkersTips] = useState(\"\");\r\n  const [status, setStatus] = useState(\"none\");\r\n  const [correctPassword, setCorrectPassword] = useState(\"\");\r\n  const [disableCrack, setDisableCracker] = useState(false);\r\n\r\n  const passwordRef = useRef();\r\n  const md5Ref = useRef();\r\n  const numOfWorkersRef = useRef();\r\n\r\n  const passwordOnChange = (event) => {\r\n    const password = event.target.value;\r\n    if (password.length === 0) {\r\n      setPasswordTips(\"\");\r\n      return;\r\n    }\r\n\r\n    if (password.length !== PASSWORD_LENGTH) {\r\n      setPasswordTips(\r\n        \"Warning! The password length should be \" +\r\n          PASSWORD_LENGTH +\r\n          \" characters long.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (password.length === PASSWORD_LENGTH) {\r\n      for (let i = 0; i < password.length; i++) {\r\n        if (\r\n          !(\r\n            (password[i] >= \"a\" && password[i] <= \"z\") ||\r\n            (password[i] >= \"A\" && password[i] <= \"Z\")\r\n          )\r\n        ) {\r\n          setPasswordTips(\"Warning! The password should be English letters.\");\r\n          return;\r\n        }\r\n      }\r\n      setPasswordTips(\"\");\r\n      md5Ref.current.value = CryptoJS.MD5(password).toString();\r\n      setMd5Tips(\"\");\r\n    }\r\n  };\r\n\r\n  const md5OnChange = (event) => {\r\n    const md5 = event.target.value;\r\n\r\n    if (md5.length === 0) {\r\n      setMd5Tips(\"\");\r\n      return;\r\n    }\r\n\r\n    if (md5.length !== MD5_LENGTH) {\r\n      setMd5Tips(\"Warning! The md5 has a length of \" + MD5_LENGTH + \".\");\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < md5.length; i++) {\r\n      if (\r\n        !(\r\n          (md5[i] >= \"a\" && md5[i] <= \"z\") ||\r\n          (md5[i] >= \"A\" && md5[i] <= \"Z\")\r\n        ) &&\r\n        !(md5[i] < \"0\" && md5[i] > \"9\")\r\n      ) {\r\n        setMd5Tips(\r\n          \"Warning! The md5 should be either English letters or numbers.\"\r\n        );\r\n        return;\r\n      }\r\n    }\r\n\r\n    setMd5Tips(\"\");\r\n  };\r\n\r\n  const numOfWorkersOnChange = (event) => {\r\n    const numOfWorkers = parseInt(event.target.value);\r\n\r\n    if (event.target.value.length === 0) {\r\n      setNumOfWorkersTips(\"\");\r\n      return;\r\n    }\r\n\r\n    if (isNaN(numOfWorkers)) {\r\n      setNumOfWorkersTips(\"Warning! Not a number.\");\r\n      return;\r\n    }\r\n\r\n    if (numOfWorkers <= 0) {\r\n      setNumOfWorkersTips(\"Warning! We need positive integer.\");\r\n      return;\r\n    }\r\n\r\n    if (numOfWorkers > MAX_NUM_OF_WORKERS) {\r\n      setNumOfWorkersTips(\r\n        \"Warning! Max number of workers is \" + MAX_NUM_OF_WORKERS + \".\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (numOfWorkers !== DEFAULT_NUM_OF_WORKERS) {\r\n      setNumOfWorkersTips(\r\n        \"Warning! We strongly suggest using \" + DEFAULT_NUM_OF_WORKERS + \" workers.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    setNumOfWorkersTips(\"\");\r\n  };\r\n\r\n  const onProceedClear = () => {\r\n    passwordRef.current.value = \"\";\r\n    md5Ref.current.value = \"\";\r\n    numOfWorkersRef.current.value = \"\";\r\n  };\r\n\r\n  const onProceedCrack = () => {\r\n    if (\r\n      passwordTips.length !== 0 ||\r\n      md5Tips.length !== 0 ||\r\n      numOfWorkersTips.length !== 0 ||\r\n      md5Ref.current.value.length === 0 ||\r\n      numOfWorkersRef.current.value.length === 0\r\n    ) {\r\n      setAlertMessage(\"Please input the correct settings.\");\r\n      setAlert(true);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 3500);\r\n      return;\r\n    }\r\n\r\n    // disable the crack button\r\n    setDisableCracker(true);\r\n\r\n    // request timeout\r\n    const requestTimeout = setTimeout(() => {\r\n      setStatus(\"Request timeout.\");\r\n    }, REQUEST_TIMEOUT);\r\n\r\n    // send post request\r\n    setStatus(\"Request has been sent.\");\r\n    \r\n    const body = {\r\n      MD5Password: md5Ref.current.value,\r\n      workerNum: DEFAULT_NUM_OF_WORKERS,\r\n    };\r\n    console.log(body);\r\n    Axios.post(MANAGEMENT_SERVER_URL, body)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setStatus(\"receive correct password\");\r\n        setCorrectPassword(res.data);\r\n        clearTimeout(requestTimeout);\r\n        setTimeout(() => {\r\n          setDisableCracker(false);\r\n        }, REQUEST_DELAY);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setStatus(\"Oops! Something happened!\");\r\n        clearTimeout(requestTimeout);\r\n        setTimeout(() => {\r\n          setDisableCracker(false);\r\n        }, REQUEST_DELAY);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"cracker\">\r\n        <div className=\"form\">\r\n          <label>\r\n            Password (optional. {PASSWORD_LENGTH} characters a~z, A~z)\r\n          </label>\r\n          <input\r\n            ref={passwordRef}\r\n            onChange={(event) => passwordOnChange(event)}\r\n            spellCheck=\"false\"\r\n          />\r\n          <div className=\"tips\">{passwordTips}</div>\r\n\r\n          <label>MD5 (Required, {MD5_LENGTH} bits)</label>\r\n          <input\r\n            ref={md5Ref}\r\n            onChange={(event) => md5OnChange(event)}\r\n            spellCheck=\"false\"\r\n          />\r\n          <div className=\"tips\">{md5Tips}</div>\r\n\r\n          <label>Number of workers (Required, max: {MAX_NUM_OF_WORKERS})</label>\r\n          <input\r\n            ref={numOfWorkersRef}\r\n            onChange={(event) => numOfWorkersOnChange(event)}\r\n            spellCheck=\"false\"\r\n          />\r\n          <div className=\"tips\">{numOfWorkersTips}</div>\r\n        </div>\r\n\r\n        <div className=\"result\">\r\n          <div>It may take 1 minute.</div>\r\n          <div>Status: {status}</div>\r\n          <div>The password behind md5: {correctPassword}</div>\r\n        </div>\r\n\r\n        <div className=\"submit\">\r\n          <button\r\n            onClick={(event) => onProceedCrack(event)}\r\n            disabled={disableCrack}\r\n          >\r\n            Crack\r\n          </button>\r\n          <button onClick={onProceedClear}>Clear</button>\r\n        </div>\r\n      </section>\r\n      {showAlert && <Alert message={alertMessage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cracker;\r\n","import \"./App.css\";\r\n\r\nimport Collaboration from './components/Collaboration/Collaboration';\r\nimport Cracker from './components/Cracker/Cracker';\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>CS 655 Final Project -- Improved Password Cracker</header>\r\n\r\n      <Collaboration/>\r\n\r\n      <Cracker/>\r\n\r\n      <section className=\"description\">\r\n        How to use? You can input either the password or the MD5. If you input\r\n        the password, the MD5 will be generated automatically. When you click\r\n        the \"Crack\" button, the crack request along with the MD5 and the number\r\n        of workers will be sent. If you input both password and MD5, the cracker\r\n        will send the MD5. Have fun!\r\n      </section>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}